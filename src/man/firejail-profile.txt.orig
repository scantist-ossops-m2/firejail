.TH FIREJAIL-PROFILE 5 "MONTH YEAR" "VERSION" "firejail profiles man page"
.SH NAME
profile \- Security profile file syntax for Firejail

.SH USAGE
.TP
firejail \-\-profile=filename.profile

.SH DESCRIPTION
Several command line options can be passed to the program using
profile files. Firejail chooses the profile file as follows:

\fB1.\fR If a profile file is provided by the user with \-\-profile option, the profile file is loaded.
Example:
.PP
.RS
$ firejail --profile=/home/netblue/icecat.profile icecat
.br
Reading profile /home/netblue/icecat.profile
.br
[...]
.RE

\fB2.\fR If a profile file with the same name as the application is present in ~/.config/firejail directory or
in /etc/firejail, the profile is loaded. ~/.config/firejail takes precedence over /etc/firejail. Example:
.PP
.RS
$ firejail icecat
.br
Command name #icecat#
.br
Found icecat profile in /home/netblue/.config/firejail directory
.br
Reading profile /home/netblue/.config/firejail/icecat.profile
.br
[...]
.RE

\fB3.\fR Use a default.profile file if the sandbox
is started by a regular user, or a server.profile file if the sandbox
is started by root. Firejail looks for these files in ~/.config/firejail directory, followed by /etc/firejail directory.
To disable default profile loading, use --noroot command option. Example:
.PP
.RS
$ firejail
.br
Reading profile /etc/firejail/generic.profile
.br
Parent pid 8553, child pid 8554
.br
Child process initialized
.br
[...] 
.br

.br
$ firejail \-\-noprofile
.br
Parent pid 8553, child pid 8554
.br
Child process initialized
.br
[...]
.RE

.SH Scripting
Scripting commands:

.TP
\fB# this is a comment

.TP
\fBinclude other.profile
Include other.profile file.

Example: "include /etc/firejail/disable-common.inc"

other.profile file name can be prefixed with ${HOME}. This will force Firejail to look for the
file in user home directory.

Example: "include ${HOME}/myprofiles/profile1" will load "~/myprofiles/profile1" file.

.TP
\fBnoblacklist file_name
If the file name matches file_name, the file will not be blacklisted in any blacklist commands that follow.

Example: "noblacklist ${HOME}/.mozilla"

.TP
\fBignore command
Ignore command.

Example: "ignore seccomp"

.SH Filesystem
These profile entries define a chroot filesystem built on top of the existing
host filesystem. Each line describes a file element that is removed from
the filesystem (\fBblacklist\fR), a read-only file or directory (\fBread-only\fR),
a tmpfs mounted on top of an existing directory (\fBtmpfs\fR),
or mount-bind a directory  or file on top of another directory or file (\fBbind\fR).
Use \fBprivate\fR to set private mode.
File globbing is supported, and PATH and HOME directories are searched.
Examples:
.TP
\fBblacklist file_or_directory
Blacklist directory or file. Examples:
.br

.br
blacklist /usr/bin
.br
blacklist /usr/bin/gcc*
.br
blacklist ${PATH}/ifconfig
.br
blacklist ${HOME}/.ssh

.TP
\fBread-only file_or_directory
Make directory or file read-only.
.TP
\fBtmpfs directory
Mount an empty tmpfs filesystem on top of directory.
.TP
\fBbind directory1,directory2
Mount-bind directory1 on top of directory2. This option is only available when running as root.
.TP
\fBbind file1,file2
Mount-bind file1 on top of file2. This option is only available when running as root.
.TP
\fBprivate
Mount new /root and /home/user directories in temporary
filesystems. All modifications are discarded when the sandbox is
closed.
.TP
\fBprivate-bin file,file
Build a new /bin in a temporary filesystem, and copy the programs in the list.
The same directory is also bind-mounted over /sbin, /usr/bin and /usr/sbin.
.TP
\fBprivate directory
Use directory as user home.
.TP
\fBprivate-home file,directory
Build a new user home in a temporary
filesystem, and copy the files and directories in the list in the
new home. All modifications are discarded when the sandbox is
closed.
.TP
\fBprivate-dev
Create a new /dev directory. Only dri, null, full, zero, tty, pts, ptmx, random, urandom, log and shm devices are available.
.TP
\fBprivate-etc file,directory
Build a new /etc in a temporary
filesystem, and copy the files and directories in the list.
All modifications are discarded when the sandbox is closed.
.TP
\fBwhitelist file_or_directory
Build a new user home in a temporary filesystem, and mount-bind file_or_directory.
The modifications to file_or_directory are persistent, everything else is discarded
when the sandbox is closed.
.TP
\fBtracelog
Blacklist violations logged to syslog.
.SH Security filters
The following security filters are currently implemented:

.TP
\fBcaps
Enable default Linux capabilities filter.
.TP
\fBcaps.drop all
Blacklist all Linux capabilities.
.TP
\fBcaps.drop capability,capability,capability
Blacklist given Linux capabilities.
.TP
\fBcaps.keep capability,capability,capability
Whitelist given Linux capabilities.
.TP
\fBprotocol protocol1,protocol2,protocol3
Enable protocol filter. The filter is based on seccomp and  checks the
first argument to socket system call. Recognized values: \fBunix\fR,
\fBinet\fR, \fBinet6\fR, \fBnetlink\fR and \fBpacket\fR.
.TP
\fBseccomp
Enable default seccomp filter.  The default list is as follows:
mount, umount2, ptrace, kexec_load, open_by_handle_at, init_module, finit_module, delete_module,
iopl, ioperm, swapon, swapoff, syslog, process_vm_readv and process_vm_writev,
sysfs,_sysctl, adjtimex, clock_adjtime, lookup_dcookie, perf_event_open, fanotify_init and kcmp.
.TP
\fBseccomp syscall,syscall,syscall
Enable seccomp filter and blacklist the system calls in the list on top of default seccomp filter.
.TP
\fBseccomp.drop syscall,syscall,syscall
Enable seccomp filter and blacklist  the system calls in the list.
.TP
\fBseccomp.keep syscall,syscall,syscall
Enable seccomp filter and whitelist the system calls in the list.
.TP
\fBnoroot
Use this command  to enable an user namespace. The namespace has only one user, the current user.
There is no root account (uid 0) defined in the namespace.

.SH Resource limits
These profile entries define the limits on system resources (rlimits) for the processes inside the sandbox.
The limits can be modified inside the sandbox using the regular \fBulimit\fR command. Example:

.TP
\fBrlimit-fsize 1024
Set the maximum file size that can be created by a process to 1024 bytes.
.TP
\fBrlimit-nproc 1000
Set the maximum number of processes that can be created for the real user ID of the calling process to 1000.
.TP
\fBrlimit-nofile 500
Set the maximum number of files that can be opened by a process to 500.
.TP
\fBrlimit-sigpending 200
Set the maximum number of processes that can be created for the real user ID of the calling process to 200.

.SH CPU Affinity
Set the CPU cores available for this sandbox using \fBcpu\fR command. Examples:

.TP
cpu 1,2,3
Use only CPU cores 0, 1 and 2.

.SH Control Groups
Place the sandbox in an existing control group specified by the full path of the task file using \fBcgroup\fR. Example:

.TP
cgroup /sys/fs/cgroup/g1/tasks
The sandbox is placed in g1 control group.

.SH User Environment
.TP
\fBname sandboxname
Set sandbox name. Example:
.br

.br
name browser

.TP
\fBenv name=value
Set environment variable. Examples:
.br

.br
env LD_LIBRARY_PATH=/opt/test/lib
.br
env CFLAGS="-W -Wall -Werror"

.TP
\fBnogroups
Disable supplementary user groups
.TP
\fBshell none
Run the program directly, without a shell.

.SH Networking
Networking features available in profile files.

.TP
\fBnetfilter
If a new network namespace is created, enabled default network filter.

.TP
\fBnetfilter filename
If a new network namespace is created, enabled the network filter in filename.

.TP
\fBnet none
Enable  a new, unconnected network namespace. The only interface
available in the new namespace is a new loopback interface (lo).
Use  this  option  to deny network access to programs that don't
really need network access.

.TP
\fBdns address
Set a DNS server for the sandbox. Up to three DNS servers can be defined.

.TP
\fBhostname name
Set a hostname for the sandbox.

.SH RELOCATING PROFILES
For various reasons some users might want to keep the profile files in a different directory.
Using \fB--profile-path\fR command line option, Firejail can be instructed to look for profiles
into this directory.

This is an example of relocating the profile files into a new
directory, /home/netblue/myprofiles. Start by creating the new directory and copy all
the profile files in:
.br

.br
$ mkdir ~/myprofiles && cd ~/myprofiles && cp /etc/firejail/* .
.br

.br
Using \fBsed\fR utility, modify the absolute paths for \fBinclude\fR commands:
.br

.br
$ sed -i "s/\\/etc\\/firejail/\\/home\\/netblue\\/myprofiles/g" *.profile
.br
$ sed -i "s/\\/etc\\/firejail/\\/home\\/netblue\\/myprofiles/g" *.inc
.br

.br
Start Firejail using the new path:
.br

.br
$ firejail --profile-path=~/myprofiles

.SH FILES
/etc/firejail/filename.profile, $HOME/.config/firejail/filename.profile

.SH LICENSE
Firejail is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
.PP
Homepage: http://firejail.wordpress.com
.SH SEE ALSO
\&\flfirejail\fR\|(1),
\&\flfiremon\fR\|(1),
\&\flfirejail-login\fR\|(5)



